// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL") ---only for virtual database
}

enum UserRole {
  OWNER // Role
  EMPLOYER
}

enum DataType {
  USER
  JOB
  APPLICATION
}

enum NotificationType {
  CREATE
  UPDATE
  DELETED
}

enum StatusType {
  ACTIVE
  DELETED
  DRAFT
}

enum JobField {
  OTHER
  TECH
  FINANCE
  MARKETING
  SALES
  MANAGEMENT
  MEDIA
  LAW
  ENGINEERING
  BUSINESS
  HR
  OPERATIONS
  DESIGN
  WRITING
  EDITING
  TEACHING
  HEALTHCARE
  ARCHITECTURE
  HOSPITALITY
  SPORTS
  NONPROFIT
}

model User {
  id           String         @id @default(cuid())
  status       StatusType     @default(ACTIVE)
  name         String
  password     String
  email        String         @unique
  role         UserRole       @default(EMPLOYER)
  jobs         Job[]
  notification Notification[]
  applications Application[]
  createdAt    DateTime       @default(now())
}

model Job {
  id             String        @id @default(cuid())
  status         StatusType    @default(ACTIVE)
  title          String
  field          JobField      @default(OTHER)
  experience     String
  designation    String
  qualifications String
  skills         String
  location       String
  description    String
  employer       User          @relation(fields: [employerId], references: [id])
  employerId     String
  applications   Application[]
  createdAt      DateTime      @default(now())
}

model Application {
  id         String     @id @default(cuid())
  status     StatusType @default(ACTIVE)
  name       String
  email      String
  phone      String
  resume     String
  linkedin   String
  createdAt  DateTime   @default(now())
  job        Job        @relation(fields: [jobId], references: [id])
  jobId      String
  employer   User       @relation(fields: [employerId], references: [id])
  employerId String
}

model Contact {
  id        String     @id @default(cuid())
  status    StatusType @default(ACTIVE)
  name      String
  email     String
  phone     String
  message   String
  createdAt DateTime   @default(now())
}

model Notification {
  id               String           @id @default(cuid())
  dataType         DataType
  notificationType NotificationType
  employer         User             @relation(fields: [employerId], references: [id])
  employerId       String
  dataId           String
  createdAt        DateTime         @default(now())
}
